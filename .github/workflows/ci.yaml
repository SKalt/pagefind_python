# a minimal example of a GitHub Actions workflow that deploys a package to pypi
name: Continuous integration
on:
  workflow_dispatch:
  push:

jobs:
  lint_and_build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: shellcheck
        uses: ludeeus/action-shellcheck@master
      - name: Set up python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Set up poetry
        run: bash ./scripts/ci/github/setup_poetry.sh
      - name: cache venv
        uses: actions/cache@v4
        with:
          path: .venv
          key: ${{ runner.os }}-poetry-3.12-${{ hashFiles('**/poetry.lock') }}
      - name: Install dev dependencies
        run: bash ./scripts/ci/github/install_dev_dependencies.sh
      - name: Python lints
        run: bash ./scripts/ci/python_lints.sh
        # TODO: figure out how to cache the .mypy_cache
      - name: check cog
        run: bash ./scripts/ci/cog/check.sh
      - name: scrape upstream version
        run: bash ./scripts/ci/github/scrape_upstream_version.sh
      - name: package binaries
        run: python3 -m scripts.build.all # should take ~30s
      - name: package python api
        run: python3 -m scripts.build.api_package
      - name: Archive dist
        uses: actions/upload-artifact@v4
        with:
          path: dist
          name: dist
          if-no-files-found: error

  integration_test:
    strategy:
      matrix:
        python-version:
          # Test on python versions with current security support.
          # See https://endoflife.date/python
          - "3.12" # until 2028-10-31
          - "3.11" # until 2027-10-31
          - "3.10" # until 2026-10-31
          - "3.9"  # until 2025-10-31
          # - "3.8"  # until 2024-10-31
          # 3.8 is already dropped by some distant transitive dependencies
          # (i.e. docutils), so it's easier to drop it here too.
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    needs: lint_and_build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      # download the dist/ artifact
      - name: Download dist
        uses: actions/download-artifact@v4
        with:
          name: dist
      - name: Set up python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: integration tests
        shell: bash
        run: ./scripts/ci/github/integration_tests.sh
      
